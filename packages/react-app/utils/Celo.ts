// Generated by @wagmi/cli@1.0.0 on 5/30/2023 at 2:02:11 PM

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Proxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const proxyABI = [
  { payable: false, stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Migrations
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const migrationsABI = [
  { payable: false, stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'last_completed_migration',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'completed', internalType: 'uint256', type: 'uint256' }],
    name: 'setCompleted',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'new_address', internalType: 'address', type: 'address' }],
    name: 'upgrade',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Initializable
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const initializableABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'testingDeployment', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// UsingRegistry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const usingRegistryABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AccountsProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const accountsProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AttestationsProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const attestationsProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BlockchainParametersProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const blockchainParametersProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DoubleSigningSlasherProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const doubleSigningSlasherProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DowntimeSlasherProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const downtimeSlasherProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ElectionProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const electionProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EpochRewardsProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const epochRewardsProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EscrowProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const escrowProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ExchangeBRLProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const exchangeBrlProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ExchangeEURProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const exchangeEurProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ExchangeProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const exchangeProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FederatedAttestationsProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const federatedAttestationsProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FeeCurrencyWhitelistProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const feeCurrencyWhitelistProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GasPriceMinimumProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const gasPriceMinimumProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GoldTokenProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const goldTokenProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GovernanceApproverMultiSigProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const governanceApproverMultiSigProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GovernanceProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const governanceProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GrandaMentoProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const grandaMentoProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LockedGoldProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const lockedGoldProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MetaTransactionWalletProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const metaTransactionWalletProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MetaTransactionWalletDeployerProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const metaTransactionWalletDeployerProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OdisPaymentsProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const odisPaymentsProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RegistryProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const registryProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReserveProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const reserveProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReserveSpenderMultiSigProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const reserveSpenderMultiSigProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// StableTokenBRLProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const stableTokenBrlProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// StableTokenEURProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const stableTokenEurProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// StableTokenProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const stableTokenProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SortedOraclesProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const sortedOraclesProxyABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'ImplementationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerSet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getImplementation',
    outputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: '_getOwner',
    outputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'callbackData', internalType: 'bytes', type: 'bytes' },
    ],
    name: '_setAndInitializeImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address' }],
    name: '_setImplementation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: '_transferOwnership',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Accounts
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const accountsABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: true }],
    name: 'AccountCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'dataEncryptionKey', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'AccountDataEncryptionKeySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'metadataURL', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'AccountMetadataURLSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'name', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'AccountNameSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'walletAddress', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'AccountWalletAddressSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'AttestationSignerAuthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'oldSigner', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'AttestationSignerRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'oldSigner', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'DefaultSignerRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'DefaultSignerSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'oldSigner', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'IndexedSignerRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'IndexedSignerSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'oldSigner', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'LegacySignerRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'LegacySignerSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'url', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'OffchainStorageRootAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'url', internalType: 'bytes', type: 'bytes', indexed: false },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'OffchainStorageRootRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'beneficiary', internalType: 'address', type: 'address', indexed: true },
      { name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'PaymentDelegationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
    ],
    name: 'SignerAuthorizationCompleted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
    ],
    name: 'SignerAuthorizationStarted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
    ],
    name: 'SignerAuthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'oldSigner', internalType: 'address', type: 'address', indexed: false },
      { name: 'role', internalType: 'bytes32', type: 'bytes32', indexed: true },
    ],
    name: 'SignerRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'ValidatorSignerAuthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'oldSigner', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'ValidatorSignerRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'VoteSignerAuthorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'oldSigner', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'VoteSignerRemoved',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'EIP712_AUTHORIZE_SIGNER_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'authorizedBy',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'eip712DomainSeparator',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'offchainStorageRoots',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'setEip712DomainSeparator',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'dataEncryptionKey', internalType: 'bytes', type: 'bytes' },
      { name: 'walletAddress', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setAccount',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'createAccount',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'name', internalType: 'string', type: 'string' }],
    name: 'setName',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'walletAddress', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setWalletAddress',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'dataEncryptionKey', internalType: 'bytes', type: 'bytes' }],
    name: 'setAccountDataEncryptionKey',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'metadataURL', internalType: 'string', type: 'string' }],
    name: 'setMetadataURL',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'url', internalType: 'bytes', type: 'bytes' }],
    name: 'addStorageRoot',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'removeStorageRoot',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getOffchainStorageRoots',
    outputs: [
      { name: '', internalType: 'bytes', type: 'bytes' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'beneficiary', internalType: 'address', type: 'address' },
      { name: 'fraction', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setPaymentDelegation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'deletePaymentDelegation',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getPaymentDelegation',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setIndexedSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeSignerWithSignature',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeVoteSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeValidatorSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'authorizeValidatorSignerWithPublicKey',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'authorizeValidatorSignerWithKeys',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeAttestationSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'completeSignerAuthorization',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'isLegacySigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'isDefaultSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'isIndexedSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'isSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'removeDefaultSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'removeIndexedSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'removeSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'removeVoteSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'removeValidatorSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'removeAttestationSigner',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'signer', internalType: 'address', type: 'address' }],
    name: 'attestationSignerToAccount',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'signer', internalType: 'address', type: 'address' }],
    name: 'validatorSignerToAccount',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'signer', internalType: 'address', type: 'address' }],
    name: 'voteSignerToAccount',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'signer', internalType: 'address', type: 'address' }],
    name: 'signerToAccount',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'role', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isLegacyRole',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '_account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'getLegacySigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'getDefaultSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'getIndexedSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getVoteSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getValidatorSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getAttestationSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'hasLegacySigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'hasDefaultSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'hasIndexedSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'string', type: 'string' },
    ],
    name: 'hasAuthorizedSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'hasAuthorizedVoteSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'hasAuthorizedValidatorSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'hasAuthorizedAttestationSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getName',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getMetadataURL',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountsToQuery', internalType: 'address[]', type: 'address[]' }],
    name: 'batchGetMetadataURL',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getDataEncryptionKey',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getWalletAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'isAccount',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'signer', internalType: 'address', type: 'address' }],
    name: 'isAuthorizedSigner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'role', internalType: 'bytes32', type: 'bytes32' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'getRoleAuthorizationSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GasPriceMinimum
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const gasPriceMinimumABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'adjustmentSpeed', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'AdjustmentSpeedSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'gasPriceMinimumFloor', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GasPriceMinimumFloorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'gasPriceMinimum', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'GasPriceMinimumUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'targetDensity', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TargetDensitySet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'adjustmentSpeed',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gasPriceMinimum',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gasPriceMinimumFloor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'targetDensity',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_registryAddress', internalType: 'address', type: 'address' },
      { name: '_gasPriceMinimumFloor', internalType: 'uint256', type: 'uint256' },
      { name: '_targetDensity', internalType: 'uint256', type: 'uint256' },
      { name: '_adjustmentSpeed', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_adjustmentSpeed', internalType: 'uint256', type: 'uint256' }],
    name: 'setAdjustmentSpeed',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_targetDensity', internalType: 'uint256', type: 'uint256' }],
    name: 'setTargetDensity',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_gasPriceMinimumFloor', internalType: 'uint256', type: 'uint256' }],
    name: 'setGasPriceMinimumFloor',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenAddress', internalType: 'address', type: 'address' }],
    name: 'getGasPriceMinimum',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'blockGasTotal', internalType: 'uint256', type: 'uint256' },
      { name: 'blockGasLimit', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateGasPriceMinimum',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'blockGasTotal', internalType: 'uint256', type: 'uint256' },
      { name: 'blockGasLimit', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getUpdatedGasPriceMinimum',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FeeCurrencyWhitelist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const feeCurrencyWhitelistABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'whitelist',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'tokenAddress', internalType: 'address', type: 'address' }],
    name: 'addToken',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getWhitelist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GoldToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const goldTokenABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'comment', internalType: 'string', type: 'string', indexed: false }],
    name: 'TransferComment',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'comment', internalType: 'string', type: 'string' },
    ],
    name: 'transferWithComment',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'circulatingSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'increaseSupply',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getBurnedAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MetaTransactionWallet
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const metaTransactionWalletABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Deposit',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'eip712DomainSeparator', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'EIP712DomainSeparatorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'guardian', internalType: 'address', type: 'address', indexed: true }],
    name: 'GuardianSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },
      { name: 'nonce', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'returnData', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'MetaTransactionExecution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'signer', internalType: 'address', type: 'address', indexed: true }],
    name: 'SignerSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'data', internalType: 'bytes', type: 'bytes', indexed: false },
      { name: 'returnData', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'TransactionExecution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'newSigner', internalType: 'address', type: 'address', indexed: true }],
    name: 'WalletRecovered',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'EIP712_EXECUTE_META_TRANSACTION_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'eip712DomainSeparator',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'guardian',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nonce',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'signer',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_signer', internalType: 'address', type: 'address' }],
    name: 'setSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_guardian', internalType: 'address', type: 'address' }],
    name: 'setGuardian',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newSigner', internalType: 'address', type: 'address' }],
    name: 'recoverWallet',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'setEip712DomainSeparator',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: '_nonce', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getMetaTransactionDigest',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: '_nonce', internalType: 'uint256', type: 'uint256' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'getMetaTransactionSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'executeMetaTransaction',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'executeTransaction',
    outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destinations', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'dataLengths', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'executeTransactions',
    outputs: [
      { name: '', internalType: 'bytes', type: 'bytes' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MetaTransactionWalletDeployer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const metaTransactionWalletDeployerABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'wallet', internalType: 'address', type: 'address', indexed: true },
      { name: 'implementation', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'WalletDeployed',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'initCallData', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'deploy',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MultiSig
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const multiSigABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Confirmation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Deposit',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'returnData', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'Execution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'internalRequired', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InternalRequirementChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerAddition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerRemoval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'required', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'RequirementChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Revocation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'Submission',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_OWNER_COUNT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'confirmations',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'internalRequired',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'owners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'required',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'transactionCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'transactions',
    outputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_owners', internalType: 'address[]', type: 'address[]' },
      { name: '_required', internalType: 'uint256', type: 'uint256' },
      { name: '_internalRequired', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'addOwner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'removeOwner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'newOwner', internalType: 'address', type: 'address' },
    ],
    name: 'replaceOwner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_required', internalType: 'uint256', type: 'uint256' }],
    name: 'changeRequirement',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_internalRequired', internalType: 'uint256', type: 'uint256' }],
    name: 'changeInternalRequirement',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'submitTransaction',
    outputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'confirmTransaction',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'revokeConfirmation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'executeTransaction',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'isConfirmed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'getConfirmationCount',
    outputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'pending', internalType: 'bool', type: 'bool' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
    name: 'getTransactionCount',
    outputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwners',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'getConfirmations',
    outputs: [{ name: '_confirmations', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'pending', internalType: 'bool', type: 'bool' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
    name: 'getTransactionIds',
    outputs: [{ name: '_transactionIds', internalType: 'uint256[]', type: 'uint256[]' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Registry
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const registryABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'string', type: 'string', indexed: false },
      { name: 'identifierHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'addr', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'RegistryUpdated',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'registry',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'string', type: 'string' },
      { name: 'addr', internalType: 'address', type: 'address' },
    ],
    name: 'setAddressFor',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'identifierHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAddressForOrDie',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'identifierHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getAddressFor',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'identifier', internalType: 'string', type: 'string' }],
    name: 'getAddressForStringOrDie',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'identifier', internalType: 'string', type: 'string' }],
    name: 'getAddressForString',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifierHashes', internalType: 'bytes32[]', type: 'bytes32[]' },
      { name: 'sender', internalType: 'address', type: 'address' },
    ],
    name: 'isOneOf',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Freezer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const freezerABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isFrozen',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'freeze',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'target', internalType: 'address', type: 'address' }],
    name: 'unfreeze',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransferWhitelist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const transferWhitelistABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addr', internalType: 'address', type: 'address', indexed: true }],
    name: 'WhitelistedAddress',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addr', internalType: 'address', type: 'address', indexed: true }],
    name: 'WhitelistedAddressRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'contractIdentifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
    ],
    name: 'WhitelistedContractIdentifier',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'whitelistedContractIdentifiers',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddress', internalType: 'address', type: 'address' }],
    name: 'whitelistAddress',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'removedAddress', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeAddress',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'contractIdentifier', internalType: 'bytes32', type: 'bytes32' }],
    name: 'whitelistRegisteredContract',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumberOfWhitelistedContractIdentifiers',
    outputs: [{ name: 'length', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_whitelist', internalType: 'address[]', type: 'address[]' }],
    name: 'setDirectlyWhitelistedAddresses',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_registeredContracts', internalType: 'bytes32[]', type: 'bytes32[]' }],
    name: 'setWhitelistedContractIdentifiers',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getWhitelist',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'selfDestruct',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Election
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const electionABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'flag', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'AllowedToVoteOverMaxNumberOfGroups',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'electabilityThreshold', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ElectabilityThresholdSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'min', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ElectableValidatorsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'EpochRewardsDistributedToVoters',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'maxNumGroupsVotedFor', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MaxNumGroupsVotedForSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'units', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorGroupActiveVoteRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'group', internalType: 'address', type: 'address', indexed: true }],
    name: 'ValidatorGroupMarkedEligible',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'group', internalType: 'address', type: 'address', indexed: true }],
    name: 'ValidatorGroupMarkedIneligible',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorGroupPendingVoteRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'units', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorGroupVoteActivated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorGroupVoteCast',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'allowedToVoteOverMaxNumberOfGroups',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'cachedVotesByAccount',
    outputs: [{ name: 'totalVotes', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'electabilityThreshold',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'electableValidators',
    outputs: [
      { name: 'min', internalType: 'uint256', type: 'uint256' },
      { name: 'max', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxNumGroupsVotedFor',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'minElectableValidators', internalType: 'uint256', type: 'uint256' },
      { name: 'maxElectableValidators', internalType: 'uint256', type: 'uint256' },
      { name: '_maxNumGroupsVotedFor', internalType: 'uint256', type: 'uint256' },
      { name: '_electabilityThreshold', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'min', internalType: 'uint256', type: 'uint256' },
      { name: 'max', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setElectableValidators',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getElectableValidators',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_maxNumGroupsVotedFor', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxNumGroupsVotedFor',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'threshold', internalType: 'uint256', type: 'uint256' }],
    name: 'setElectabilityThreshold',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getElectabilityThreshold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
    ],
    name: 'vote',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'activate',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'activateForAccount',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'group', internalType: 'address', type: 'address' },
    ],
    name: 'hasActivatablePendingVotes',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePending',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeAllActive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeActive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getTotalVotesByAccount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'group', internalType: 'address', type: 'address' },
    ],
    name: 'updateTotalVotesByAccountForGroup',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getPendingVotesForGroupByAccount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getActiveVotesForGroupByAccount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getTotalVotesForGroupByAccount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getActiveVoteUnitsForGroupByAccount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'getActiveVoteUnitsForGroup',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'getTotalVotesForGroup',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'getActiveVotesForGroup',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'getPendingVotesForGroup',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'getGroupEligibility',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'totalEpochRewards', internalType: 'uint256', type: 'uint256' },
      { name: 'uptimes', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'getGroupEpochRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
    ],
    name: 'distributeEpochRewards',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'markGroupIneligible',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
    ],
    name: 'markGroupEligible',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getGroupsVotedForByAccount',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'canReceiveVotes',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'getNumVotesReceivable',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getActiveVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEligibleValidatorGroups',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalVotesForEligibleValidatorGroups',
    outputs: [
      { name: 'groups', internalType: 'address[]', type: 'address[]' },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'electValidatorSigners',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'minElectableValidators', internalType: 'uint256', type: 'uint256' },
      { name: 'maxElectableValidators', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'electNValidatorSigners',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrentValidatorSigners',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'flag', internalType: 'bool', type: 'bool' }],
    name: 'setAllowedToVoteOverMaxNumberOfGroups',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lessers', internalType: 'address[]', type: 'address[]' },
      { name: 'greaters', internalType: 'address[]', type: 'address[]' },
      { name: 'indices', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'forceDecrementVotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EpochRewards
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const epochRewardsABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'partner', internalType: 'address', type: 'address', indexed: true },
      { name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CarbonOffsettingFundSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'CommunityRewardFractionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'underspendAdjustmentFactor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
      {
        name: 'overspendAdjustmentFactor',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'RewardsMultiplierParametersSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'payment', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TargetValidatorEpochPaymentSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TargetVotingGoldFractionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'max', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'adjustmentFactor', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TargetVotingYieldParametersSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'target', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TargetVotingYieldSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'fraction', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TargetVotingYieldUpdated',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'carbonOffsettingPartner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'startTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'targetValidatorEpochPayment',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'targetVotingYieldInitial', internalType: 'uint256', type: 'uint256' },
      { name: 'targetVotingYieldMax', internalType: 'uint256', type: 'uint256' },
      { name: 'targetVotingYieldAdjustmentFactor', internalType: 'uint256', type: 'uint256' },
      { name: 'rewardsMultiplierMax', internalType: 'uint256', type: 'uint256' },
      {
        name: 'rewardsMultiplierUnderspendAdjustmentFactor',
        internalType: 'uint256',
        type: 'uint256',
      },
      {
        name: 'rewardsMultiplierOverspendAdjustmentFactor',
        internalType: 'uint256',
        type: 'uint256',
      },
      { name: '_targetVotingGoldFraction', internalType: 'uint256', type: 'uint256' },
      { name: '_targetValidatorEpochPayment', internalType: 'uint256', type: 'uint256' },
      { name: '_communityRewardFraction', internalType: 'uint256', type: 'uint256' },
      { name: '_carbonOffsettingPartner', internalType: 'address', type: 'address' },
      { name: '_carbonOffsettingFraction', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTargetVotingYieldParameters',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRewardsMultiplierParameters',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setCommunityRewardFraction',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCommunityRewardFraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'partner', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setCarbonOffsettingFund',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCarbonOffsettingFraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setTargetVotingGoldFraction',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTargetVotingGoldFraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setTargetValidatorEpochPayment',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'max', internalType: 'uint256', type: 'uint256' },
      { name: 'underspendAdjustmentFactor', internalType: 'uint256', type: 'uint256' },
      { name: 'overspendAdjustmentFactor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRewardsMultiplierParameters',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'max', internalType: 'uint256', type: 'uint256' },
      { name: 'adjustmentFactor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setTargetVotingYieldParameters',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'targetVotingYield', internalType: 'uint256', type: 'uint256' }],
    name: 'setTargetVotingYield',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTargetGoldTotalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTargetVoterRewards',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTargetTotalEpochPaymentsInGold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRewardsMultiplier',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getVotingGoldFraction',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'updateTargetVotingYield',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isReserveLow',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'calculateTargetEpochRewards',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Governance
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const governanceABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'approver', internalType: 'address', type: 'address', indexed: true }],
    name: 'ApproverSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'concurrentProposals', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ConcurrentProposalsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address', indexed: true },
      { name: 'functionId', internalType: 'bytes4', type: 'bytes4', indexed: true },
      { name: 'threshold', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ConstitutionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'dequeueFrequency', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'DequeueFrequencySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'executionStageDuration', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ExecutionStageDurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32', indexed: true }],
    name: 'HotfixApproved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32', indexed: true }],
    name: 'HotfixExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'hash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'HotfixPrepared',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'hash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'whitelister', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'HotfixWhitelisted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'minDeposit', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MinDepositSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'baselineQuorumFactor', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ParticipationBaselineQuorumFactorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'baselineUpdateFactor', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ParticipationBaselineUpdateFactorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'participationBaseline', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ParticipationBaselineUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'participationFloor', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ParticipationFloorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ProposalApproved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalDequeued',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ProposalExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ProposalExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'proposer', internalType: 'address', type: 'address', indexed: true },
      { name: 'transactionCount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'deposit', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalQueued',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'revokedUpvotes', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalUpvoteRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'upvotes', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalUpvoted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'weight', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalVoteRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'yesVotes', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'noVotes', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'abstainVotes', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalVoteRevokedV2',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'weight', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalVoted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'yesVotes', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'noVotes', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'abstainVotes', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ProposalVotedV2',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'queueExpiry', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'QueueExpirySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'referendumStageDuration', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ReferendumStageDurationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'approver',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'concurrentProposals',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dequeueFrequency',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'dequeued',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'emptyIndices',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'hotfixes',
    outputs: [
      { name: 'executed', internalType: 'bool', type: 'bool' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
      { name: 'preparedEpoch', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastDequeue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minDeposit',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proposalCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'queueExpiry',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'refundedDeposits',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stageDurations',
    outputs: [
      { name: 'approval', internalType: 'uint256', type: 'uint256' },
      { name: 'referendum', internalType: 'uint256', type: 'uint256' },
      { name: 'execution', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: '_approver', internalType: 'address', type: 'address' },
      { name: '_concurrentProposals', internalType: 'uint256', type: 'uint256' },
      { name: '_minDeposit', internalType: 'uint256', type: 'uint256' },
      { name: '_queueExpiry', internalType: 'uint256', type: 'uint256' },
      { name: '_dequeueFrequency', internalType: 'uint256', type: 'uint256' },
      { name: 'referendumStageDuration', internalType: 'uint256', type: 'uint256' },
      { name: 'executionStageDuration', internalType: 'uint256', type: 'uint256' },
      { name: 'participationBaseline', internalType: 'uint256', type: 'uint256' },
      { name: 'participationFloor', internalType: 'uint256', type: 'uint256' },
      { name: 'baselineUpdateFactor', internalType: 'uint256', type: 'uint256' },
      { name: 'baselineQuorumFactor', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_approver', internalType: 'address', type: 'address' }],
    name: 'setApprover',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_concurrentProposals', internalType: 'uint256', type: 'uint256' }],
    name: 'setConcurrentProposals',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_minDeposit', internalType: 'uint256', type: 'uint256' }],
    name: 'setMinDeposit',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_queueExpiry', internalType: 'uint256', type: 'uint256' }],
    name: 'setQueueExpiry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_dequeueFrequency', internalType: 'uint256', type: 'uint256' }],
    name: 'setDequeueFrequency',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'referendumStageDuration', internalType: 'uint256', type: 'uint256' }],
    name: 'setReferendumStageDuration',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'executionStageDuration', internalType: 'uint256', type: 'uint256' }],
    name: 'setExecutionStageDuration',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'participationBaseline', internalType: 'uint256', type: 'uint256' }],
    name: 'setParticipationBaseline',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'participationFloor', internalType: 'uint256', type: 'uint256' }],
    name: 'setParticipationFloor',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'baselineUpdateFactor', internalType: 'uint256', type: 'uint256' }],
    name: 'setBaselineUpdateFactor',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'baselineQuorumFactor', internalType: 'uint256', type: 'uint256' }],
    name: 'setBaselineQuorumFactor',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'functionId', internalType: 'bytes4', type: 'bytes4' },
      { name: 'threshold', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setConstitution',
    outputs: [],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'destinations', internalType: 'address[]', type: 'address[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'dataLengths', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'descriptionUrl', internalType: 'string', type: 'string' },
    ],
    name: 'propose',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'lesser', internalType: 'uint256', type: 'uint256' },
      { name: 'greater', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'upvote',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'getProposalStage',
    outputs: [{ name: '', internalType: 'enum Proposals.Stage', type: 'uint8' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'lesser', internalType: 'uint256', type: 'uint256' },
      { name: 'greater', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeUpvote',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'enum Proposals.VoteValue', type: 'uint8' },
    ],
    name: 'vote',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'yesVotes', internalType: 'uint256', type: 'uint256' },
      { name: 'noVotes', internalType: 'uint256', type: 'uint256' },
      { name: 'abstainVotes', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'votePartially',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'revokeVotes',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'execute',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'approveHotfix',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'hash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'whitelister', internalType: 'address', type: 'address' },
    ],
    name: 'isHotfixWhitelistedBy',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'whitelistHotfix',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'prepareHotfix',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'destinations', internalType: 'address[]', type: 'address[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'dataLengths', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'salt', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'executeHotfix',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'isVoting',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getReferendumStageDuration',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getExecutionStageDuration',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getParticipationParameters',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'proposalExists',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'getProposal',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'string', type: 'string' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getProposalTransaction',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'isApproved',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'getVoteTotals',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getVoteRecord',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getQueueLength',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'getUpvotes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getQueue',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getDequeue',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getUpvoteRecord',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getMostRecentReferendumProposal',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'hotfixWhitelistValidatorTally',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isHotfixPassing',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'hash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getHotfixRecord',
    outputs: [
      { name: '', internalType: 'bool', type: 'bool' },
      { name: '', internalType: 'bool', type: 'bool' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'dequeueProposalsIfReady',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'isQueued',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'isProposalPassing',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isDequeuedProposal',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'isDequeuedProposalExpired',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'isQueuedProposalExpired',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'functionId', internalType: 'bytes4', type: 'bytes4' },
    ],
    name: 'getConstitution',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getAmountOfGoldUsedForVoting',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GovernanceApproverMultiSig
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const governanceApproverMultiSigABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Confirmation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Deposit',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'returnData', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'Execution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'internalRequired', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InternalRequirementChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerAddition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerRemoval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'required', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'RequirementChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Revocation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'Submission',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_OWNER_COUNT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'addOwner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_internalRequired', internalType: 'uint256', type: 'uint256' }],
    name: 'changeInternalRequirement',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_required', internalType: 'uint256', type: 'uint256' }],
    name: 'changeRequirement',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'confirmTransaction',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'confirmations',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'executeTransaction',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'getConfirmationCount',
    outputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'getConfirmations',
    outputs: [{ name: '_confirmations', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwners',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'pending', internalType: 'bool', type: 'bool' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
    name: 'getTransactionCount',
    outputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'pending', internalType: 'bool', type: 'bool' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
    name: 'getTransactionIds',
    outputs: [{ name: '_transactionIds', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_owners', internalType: 'address[]', type: 'address[]' },
      { name: '_required', internalType: 'uint256', type: 'uint256' },
      { name: '_internalRequired', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'internalRequired',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'isConfirmed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'owners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'removeOwner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'newOwner', internalType: 'address', type: 'address' },
    ],
    name: 'replaceOwner',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'required',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'revokeConfirmation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'submitTransaction',
    outputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'transactionCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'transactions',
    outputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BlockchainParameters
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const blockchainParametersABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'limit', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'BlockGasLimitSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'gas', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'IntrinsicGasForAlternativeFeeCurrencySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'major', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minor', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'patch', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MinimumClientVersionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'window', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'activationEpoch', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'UptimeLookbackWindowSet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'blockGasLimit',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'intrinsicGasForAlternativeFeeCurrency',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'uptimeLookbackWindow',
    outputs: [
      { name: 'oldValue', internalType: 'uint256', type: 'uint256' },
      { name: 'nextValue', internalType: 'uint256', type: 'uint256' },
      { name: 'nextValueActivationEpoch', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'major', internalType: 'uint256', type: 'uint256' },
      { name: 'minor', internalType: 'uint256', type: 'uint256' },
      { name: 'patch', internalType: 'uint256', type: 'uint256' },
      { name: '_gasForNonGoldCurrencies', internalType: 'uint256', type: 'uint256' },
      { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
      { name: 'lookbackWindow', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'major', internalType: 'uint256', type: 'uint256' },
      { name: 'minor', internalType: 'uint256', type: 'uint256' },
      { name: 'patch', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinimumClientVersion',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'gasLimit', internalType: 'uint256', type: 'uint256' }],
    name: 'setBlockGasLimit',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'gas', internalType: 'uint256', type: 'uint256' }],
    name: 'setIntrinsicGasForAlternativeFeeCurrency',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'window', internalType: 'uint256', type: 'uint256' }],
    name: 'setUptimeLookbackWindow',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getUptimeLookbackWindow',
    outputs: [{ name: 'lookbackWindow', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMinimumClientVersion',
    outputs: [
      { name: 'major', internalType: 'uint256', type: 'uint256' },
      { name: 'minor', internalType: 'uint256', type: 'uint256' },
      { name: 'patch', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DoubleSigningSlasher
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const doubleSigningSlasherABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'DoubleSigningSlashPerformed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'penalty', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'reward', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SlashingIncentivesSet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'groupMembershipHistoryIndex', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'groupMembershipAtBlock',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'penalty', internalType: 'uint256', type: 'uint256' },
      { name: 'reward', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setSlashingIncentives',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'slashingIncentives',
    outputs: [
      { name: 'penalty', internalType: 'uint256', type: 'uint256' },
      { name: 'reward', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: '_penalty', internalType: 'uint256', type: 'uint256' },
      { name: '_reward', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'headerA', internalType: 'bytes', type: 'bytes' },
      { name: 'headerB', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkForDoubleSigning',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'headerA', internalType: 'bytes', type: 'bytes' },
      { name: 'headerB', internalType: 'bytes', type: 'bytes' },
      { name: 'groupMembershipHistoryIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'validatorElectionLessers', internalType: 'address[]', type: 'address[]' },
      { name: 'validatorElectionGreaters', internalType: 'address[]', type: 'address[]' },
      { name: 'validatorElectionIndices', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'groupElectionLessers', internalType: 'address[]', type: 'address[]' },
      { name: 'groupElectionGreaters', internalType: 'address[]', type: 'address[]' },
      { name: 'groupElectionIndices', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'slash',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DowntimeSlasher
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const downtimeSlasherABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'startBlock', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'bitmap', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'BitmapSetForInterval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'startBlock', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'DowntimeSlashPerformed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'interval', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SlashableDowntimeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'penalty', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'reward', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SlashingIncentivesSet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'bitmaps',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'groupMembershipHistoryIndex', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'groupMembershipAtBlock',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'lastSlashedBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'penalty', internalType: 'uint256', type: 'uint256' },
      { name: 'reward', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setSlashingIncentives',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'slashableDowntime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'slashingIncentives',
    outputs: [
      { name: 'penalty', internalType: 'uint256', type: 'uint256' },
      { name: 'reward', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: '_penalty', internalType: 'uint256', type: 'uint256' },
      { name: '_reward', internalType: 'uint256', type: 'uint256' },
      { name: '_slashableDowntime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'interval', internalType: 'uint256', type: 'uint256' }],
    name: 'setSlashableDowntime',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getBitmapForInterval',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setBitmapForInterval',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'signerIndex', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'wasDownForInterval',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'startBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'endBlock', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'isBitmapSetForInterval',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'startBlocks', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'endBlocks', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signerIndices', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'wasDownForIntervals',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'startBlocks', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'endBlocks', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'signerIndices', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'groupMembershipHistoryIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'validatorElectionLessers', internalType: 'address[]', type: 'address[]' },
      { name: 'validatorElectionGreaters', internalType: 'address[]', type: 'address[]' },
      { name: 'validatorElectionIndices', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'groupElectionLessers', internalType: 'address[]', type: 'address[]' },
      { name: 'groupElectionGreaters', internalType: 'address[]', type: 'address[]' },
      { name: 'groupElectionIndices', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'slash',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// LockedGold
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const lockedGoldABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'slashed', internalType: 'address', type: 'address', indexed: true },
      { name: 'penalty', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'reporter', internalType: 'address', type: 'address', indexed: true },
      { name: 'reward', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AccountSlashed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GoldLocked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GoldRelocked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'available', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GoldUnlocked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GoldWithdrawn',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'slasherIdentifier', internalType: 'string', type: 'string', indexed: true }],
    name: 'SlasherWhitelistAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'slasherIdentifier', internalType: 'string', type: 'string', indexed: true }],
    name: 'SlasherWhitelistRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'period', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'UnlockingPeriodSet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'slashingWhitelist',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalNonvoting',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'unlockingPeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'slasher', internalType: 'address', type: 'address' }],
    name: 'isSlasher',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: '_unlockingPeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setUnlockingPeriod',
    outputs: [],
  },
  {
    constant: false,
    payable: true,
    stateMutability: 'payable',
    type: 'function',
    inputs: [],
    name: 'lock',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'incrementNonvotingAccountBalance',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decrementNonvotingAccountBalance',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'unlock',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'relock',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalLockedGold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNonvotingLockedGold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getAccountTotalLockedGold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getAccountNonvotingLockedGold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getPendingWithdrawals',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getPendingWithdrawal',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getTotalPendingWithdrawals',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getSlashingWhitelist',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'slasherIdentifier', internalType: 'string', type: 'string' }],
    name: 'addSlasher',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'slasherIdentifier', internalType: 'string', type: 'string' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeSlasher',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'penalty', internalType: 'uint256', type: 'uint256' },
      { name: 'reporter', internalType: 'address', type: 'address' },
      { name: 'reward', internalType: 'uint256', type: 'uint256' },
      { name: 'lessers', internalType: 'address[]', type: 'address[]' },
      { name: 'greaters', internalType: 'address[]', type: 'address[]' },
      { name: 'indices', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'slash',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Validators
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const validatorsABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'delay', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'CommissionUpdateDelaySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'duration', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'GroupLockedGoldRequirementsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'size', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MaxGroupSizeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'length', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MembershipHistoryLengthSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ValidatorAffiliated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'ValidatorBlsPublicKeyUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ValidatorDeaffiliated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'validator', internalType: 'address', type: 'address', indexed: true }],
    name: 'ValidatorDeregistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'ValidatorEcdsaPublicKeyUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'validatorPayment', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'groupPayment', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorEpochPaymentDistributed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'commission', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'activationBlock', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorGroupCommissionUpdateQueued',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'commission', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorGroupCommissionUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'group', internalType: 'address', type: 'address', indexed: true }],
    name: 'ValidatorGroupDeregistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ValidatorGroupMemberAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ValidatorGroupMemberRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ValidatorGroupMemberReordered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'group', internalType: 'address', type: 'address', indexed: true },
      { name: 'commission', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorGroupRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'duration', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorLockedGoldRequirementsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'validator', internalType: 'address', type: 'address', indexed: true }],
    name: 'ValidatorRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'exponent', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'adjustmentSpeed', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorScoreParametersSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address', indexed: true },
      { name: 'score', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'epochScore', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ValidatorScoreUpdated',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'commissionUpdateDelay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'downtimeGracePeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'groupLockedGoldRequirements',
    outputs: [
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxGroupSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'membershipHistoryLength',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'slashingMultiplierResetPeriod',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'validatorLockedGoldRequirements',
    outputs: [
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'groupRequirementValue', internalType: 'uint256', type: 'uint256' },
      { name: 'groupRequirementDuration', internalType: 'uint256', type: 'uint256' },
      { name: 'validatorRequirementValue', internalType: 'uint256', type: 'uint256' },
      { name: 'validatorRequirementDuration', internalType: 'uint256', type: 'uint256' },
      { name: 'validatorScoreExponent', internalType: 'uint256', type: 'uint256' },
      { name: 'validatorScoreAdjustmentSpeed', internalType: 'uint256', type: 'uint256' },
      { name: '_membershipHistoryLength', internalType: 'uint256', type: 'uint256' },
      { name: '_slashingMultiplierResetPeriod', internalType: 'uint256', type: 'uint256' },
      { name: '_maxGroupSize', internalType: 'uint256', type: 'uint256' },
      { name: '_commissionUpdateDelay', internalType: 'uint256', type: 'uint256' },
      { name: '_downtimeGracePeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'delay', internalType: 'uint256', type: 'uint256' }],
    name: 'setCommissionUpdateDelay',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'size', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxGroupSize',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'length', internalType: 'uint256', type: 'uint256' }],
    name: 'setMembershipHistoryLength',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: 'adjustmentSpeed', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setValidatorScoreParameters',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMaxGroupSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCommissionUpdateDelay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setGroupLockedGoldRequirements',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'duration', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setValidatorLockedGoldRequirements',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'registerValidator',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getValidatorScoreParameters',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getMembershipHistory',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'uptime', internalType: 'uint256', type: 'uint256' }],
    name: 'calculateEpochScore',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'uptimes', internalType: 'uint256[]', type: 'uint256[]' }],
    name: 'calculateGroupEpochScore',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'uptime', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'updateValidatorScoreFromSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'maxPayment', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'distributeEpochPaymentsFromSigner',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'deregisterValidator',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'group', internalType: 'address', type: 'address' }],
    name: 'affiliate',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'deaffiliate',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'updateBlsPublicKey',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'updateEcdsaPublicKey',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'updatePublicKeys',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'commission', internalType: 'uint256', type: 'uint256' }],
    name: 'registerValidatorGroup',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'deregisterValidatorGroup',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'validator', internalType: 'address', type: 'address' }],
    name: 'addMember',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
    ],
    name: 'addFirstMember',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'validator', internalType: 'address', type: 'address' }],
    name: 'removeMember',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'validator', internalType: 'address', type: 'address' },
      { name: 'lesserMember', internalType: 'address', type: 'address' },
      { name: 'greaterMember', internalType: 'address', type: 'address' },
    ],
    name: 'reorderMember',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'commission', internalType: 'uint256', type: 'uint256' }],
    name: 'setNextCommissionUpdate',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'updateCommission',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getAccountLockedGoldRequirement',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'meetsAccountLockedGoldRequirements',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'signer', internalType: 'address', type: 'address' }],
    name: 'getValidatorBlsPublicKeyFromSigner',
    outputs: [{ name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getValidator',
    outputs: [
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'affiliation', internalType: 'address', type: 'address' },
      { name: 'score', internalType: 'uint256', type: 'uint256' },
      { name: 'signer', internalType: 'address', type: 'address' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getValidatorGroup',
    outputs: [
      { name: '', internalType: 'address[]', type: 'address[]' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getGroupNumMembers',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'n', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getTopGroupValidators',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accounts', internalType: 'address[]', type: 'address[]' }],
    name: 'getGroupsNumMembers',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getNumRegisteredValidators',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getValidatorLockedGoldRequirements',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getGroupLockedGoldRequirements',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRegisteredValidators',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRegisteredValidatorSigners',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRegisteredValidatorGroups',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'isValidatorGroup',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'isValidator',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'signer', internalType: 'address', type: 'address' }],
    name: 'getMembershipInLastEpochFromSigner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getMembershipInLastEpoch',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'validatorAccount', internalType: 'address', type: 'address' }],
    name: 'forceDeaffiliateIfValidator',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setSlashingMultiplierResetPeriod',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setDowntimeGracePeriod',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'resetSlashingMultiplier',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'halveSlashingMultiplier',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'getValidatorGroupSlashingMultiplier',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'epochNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'groupMembershipInEpoch',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReleaseGold
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const releaseGoldABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'beneficiary', internalType: 'address', type: 'address', indexed: true }],
    name: 'BeneficiarySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'canExpire', internalType: 'bool', type: 'bool', indexed: false }],
    name: 'CanExpireSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'beneficiary', internalType: 'address', type: 'address', indexed: true },
      { name: 'maxDistribution', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'DistributionLimitSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'beneficiary', internalType: 'address', type: 'address', indexed: true }],
    name: 'LiquidityProvisionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'beneficiary', internalType: 'address', type: 'address', indexed: true },
      { name: 'atAddress', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ReleaseGoldInstanceCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'beneficiary', internalType: 'address', type: 'address', indexed: true },
      { name: 'atAddress', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'ReleaseGoldInstanceDestroyed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'revokeTimestamp', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'releasedBalanceAtRevoke', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ReleaseScheduleRevoked',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'EXPIRATION_TIME',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'beneficiary',
    outputs: [{ name: '', internalType: 'address payable', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'canValidate',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'canVote',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'liquidityProvisionMet',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxDistribution',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'refundAddress',
    outputs: [{ name: '', internalType: 'address payable', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'releaseOwner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'releaseSchedule',
    outputs: [
      { name: 'releaseStartTime', internalType: 'uint256', type: 'uint256' },
      { name: 'releaseCliff', internalType: 'uint256', type: 'uint256' },
      { name: 'numReleasePeriods', internalType: 'uint256', type: 'uint256' },
      { name: 'releasePeriod', internalType: 'uint256', type: 'uint256' },
      { name: 'amountReleasedPerPeriod', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'revocationInfo',
    outputs: [
      { name: 'revocable', internalType: 'bool', type: 'bool' },
      { name: 'canExpire', internalType: 'bool', type: 'bool' },
      { name: 'releasedBalanceAtRevoke', internalType: 'uint256', type: 'uint256' },
      { name: 'revokeTime', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalWithdrawn',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isFunded',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'erc20', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'genericTransfer',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'releaseStartTime', internalType: 'uint256', type: 'uint256' },
      { name: 'releaseCliffTime', internalType: 'uint256', type: 'uint256' },
      { name: 'numReleasePeriods', internalType: 'uint256', type: 'uint256' },
      { name: 'releasePeriod', internalType: 'uint256', type: 'uint256' },
      { name: 'amountReleasedPerPeriod', internalType: 'uint256', type: 'uint256' },
      { name: 'revocable', internalType: 'bool', type: 'bool' },
      { name: '_beneficiary', internalType: 'address payable', type: 'address' },
      { name: '_releaseOwner', internalType: 'address', type: 'address' },
      { name: '_refundAddress', internalType: 'address payable', type: 'address' },
      { name: 'subjectToLiquidityProvision', internalType: 'bool', type: 'bool' },
      { name: 'initialDistributionRatio', internalType: 'uint256', type: 'uint256' },
      { name: '_canValidate', internalType: 'bool', type: 'bool' },
      { name: '_canVote', internalType: 'bool', type: 'bool' },
      { name: 'registryAddress', internalType: 'address', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isRevoked',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'setLiquidityProvision',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_canExpire', internalType: 'bool', type: 'bool' }],
    name: 'setCanExpire',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'distributionRatio', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxDistribution',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newBeneficiary', internalType: 'address payable', type: 'address' }],
    name: 'setBeneficiary',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'refundAndFinalize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'revoke',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'expire',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTotalBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRemainingTotalBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRemainingUnlockedBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRemainingLockedBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getCurrentReleasedTotalAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'lockGold',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'unlockGold',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'relockGold',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'withdrawLockedGold',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address payable', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeVoteSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address payable', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeValidatorSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address payable', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'authorizeValidatorSignerWithPublicKey',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address payable', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
      { name: 'ecdsaPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPublicKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'authorizeValidatorSignerWithKeys',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'signer', internalType: 'address payable', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'authorizeAttestationSigner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'dataEncryptionKey', internalType: 'bytes', type: 'bytes' },
      { name: 'walletAddress', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setAccount',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'createAccount',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'name', internalType: 'string', type: 'string' }],
    name: 'setAccountName',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'walletAddress', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'setAccountWalletAddress',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'dataEncryptionKey', internalType: 'bytes', type: 'bytes' }],
    name: 'setAccountDataEncryptionKey',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'metadataURL', internalType: 'string', type: 'string' }],
    name: 'setAccountMetadataURL',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokeActive',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'group', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lesser', internalType: 'address', type: 'address' },
      { name: 'greater', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revokePending',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getWithdrawableAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Attestations
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const attestationsABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'issuer', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'AttestationCompleted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'AttestationExpiryBlocksSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'issuer', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'attestationRequestFeeToken',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AttestationIssuerSelected',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'AttestationRequestFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'attestationsRequested', internalType: 'uint256', type: 'uint256', indexed: false },
      {
        name: 'attestationRequestFeeToken',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AttestationsRequested',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'fromAccount', internalType: 'address', type: 'address', indexed: true },
      { name: 'toAccount', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'AttestationsTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MaxAttestationsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SelectIssuersWaitBlocksSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'approver', internalType: 'address', type: 'address', indexed: true },
      { name: 'indentifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: false },
      { name: 'to', internalType: 'address', type: 'address', indexed: false },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'TransferApproval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Withdrawal',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'attestationExpiryBlocks',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'attestationRequestFees',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxAttestations',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'pendingWithdrawals',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'selectIssuersWaitBlocks',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'transferApprovals',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: '_attestationExpiryBlocks', internalType: 'uint256', type: 'uint256' },
      { name: '_selectIssuersWaitBlocks', internalType: 'uint256', type: 'uint256' },
      { name: '_maxAttestations', internalType: 'uint256', type: 'uint256' },
      { name: 'attestationRequestFeeTokens', internalType: 'address[]', type: 'address[]' },
      { name: 'attestationRequestFeeValues', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'revoke',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'withdraw',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getUnselectedRequest',
    outputs: [
      { name: '', internalType: 'uint32', type: 'uint32' },
      { name: '', internalType: 'uint32', type: 'uint32' },
      { name: '', internalType: 'address', type: 'address' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getAttestationIssuers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getAttestationStats',
    outputs: [
      { name: '', internalType: 'uint32', type: 'uint32' },
      { name: '', internalType: 'uint32', type: 'uint32' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'identifiersToLookup', internalType: 'bytes32[]', type: 'bytes32[]' }],
    name: 'batchGetAttestationStats',
    outputs: [
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
      { name: '', internalType: 'uint64[]', type: 'uint64[]' },
      { name: '', internalType: 'uint64[]', type: 'uint64[]' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'issuer', internalType: 'address', type: 'address' },
    ],
    name: 'getAttestationState',
    outputs: [
      { name: '', internalType: 'uint8', type: 'uint8' },
      { name: '', internalType: 'uint32', type: 'uint32' },
      { name: '', internalType: 'address', type: 'address' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'getCompletableAttestations',
    outputs: [
      { name: '', internalType: 'uint32[]', type: 'uint32[]' },
      { name: '', internalType: 'address[]', type: 'address[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'getAttestationRequestFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'fee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setAttestationRequestFee',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_attestationExpiryBlocks', internalType: 'uint256', type: 'uint256' }],
    name: 'setAttestationExpiryBlocks',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_selectIssuersWaitBlocks', internalType: 'uint256', type: 'uint256' }],
    name: 'setSelectIssuersWaitBlocks',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_maxAttestations', internalType: 'uint256', type: 'uint256' }],
    name: 'setMaxAttestations',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getMaxAttestations',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'validateAttestationCode',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'identifier', internalType: 'bytes32', type: 'bytes32' }],
    name: 'lookupAccountsForIdentifier',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'expected', internalType: 'uint32', type: 'uint32' },
    ],
    name: 'requireNAttestationsRequested',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Escrow
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const escrowABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'trustedIssuer', internalType: 'address', type: 'address', indexed: true }],
    name: 'DefaultTrustedIssuerAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'trustedIssuer', internalType: 'address', type: 'address', indexed: true }],
    name: 'DefaultTrustedIssuerRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'by', internalType: 'address', type: 'address', indexed: true },
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'paymentId', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'Revocation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'paymentId', internalType: 'address', type: 'address', indexed: false },
      { name: 'minAttestations', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'paymentId', internalType: 'address', type: 'address', indexed: true },
      { name: 'trustedIssuers', internalType: 'address[]', type: 'address[]', indexed: false },
    ],
    name: 'TrustedIssuersSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'paymentId', internalType: 'address', type: 'address', indexed: true }],
    name: 'TrustedIssuersUnset',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'paymentId', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'Withdrawal',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_TRUSTED_ISSUERS_PER_PAYMENT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'defaultTrustedIssuers',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'escrowedPayments',
    outputs: [
      { name: 'recipientIdentifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'sentIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'receivedIndex', internalType: 'uint256', type: 'uint256' },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256' },
      { name: 'expirySeconds', internalType: 'uint256', type: 'uint256' },
      { name: 'minAttestations', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'bytes32', type: 'bytes32' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'receivedPaymentIds',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registryContract',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'sentPaymentIds',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'trustedIssuersPerPayment',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'trustedIssuer', internalType: 'address', type: 'address' }],
    name: 'addDefaultTrustedIssuer',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'trustedIssuer', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeDefaultTrustedIssuer',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'expirySeconds', internalType: 'uint256', type: 'uint256' },
      { name: 'paymentId', internalType: 'address', type: 'address' },
      { name: 'minAttestations', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'expirySeconds', internalType: 'uint256', type: 'uint256' },
      { name: 'paymentId', internalType: 'address', type: 'address' },
      { name: 'minAttestations', internalType: 'uint256', type: 'uint256' },
      { name: 'trustedIssuers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'transferWithTrustedIssuers',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'paymentId', internalType: 'address', type: 'address' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'withdraw',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'paymentId', internalType: 'address', type: 'address' }],
    name: 'revoke',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'identifier', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getReceivedPaymentIds',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'sender', internalType: 'address', type: 'address' }],
    name: 'getSentPaymentIds',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'paymentId', internalType: 'address', type: 'address' }],
    name: 'getTrustedIssuersPerPayment',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getDefaultTrustedIssuers',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FederatedAttestations
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const federatedAttestationsABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'issuer', internalType: 'address', type: 'address', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'issuedOn', internalType: 'uint64', type: 'uint64', indexed: false },
      { name: 'publishedOn', internalType: 'uint64', type: 'uint64', indexed: false },
    ],
    name: 'AttestationRegistered',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'issuer', internalType: 'address', type: 'address', indexed: true },
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'signer', internalType: 'address', type: 'address', indexed: false },
      { name: 'issuedOn', internalType: 'uint64', type: 'uint64', indexed: false },
      { name: 'publishedOn', internalType: 'uint64', type: 'uint64', indexed: false },
    ],
    name: 'AttestationRevoked',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'eip712DomainSeparator', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'EIP712DomainSeparatorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'EIP712_OWNERSHIP_ATTESTATION_TYPEHASH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_ATTESTATIONS_PER_IDENTIFIER',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_IDENTIFIERS_PER_ADDRESS',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'addressToIdentifiers',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'eip712DomainSeparator',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'bytes32', type: 'bytes32' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'identifierToAttestations',
    outputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'issuedOn', internalType: 'uint64', type: 'uint64' },
      { name: 'publishedOn', internalType: 'uint64', type: 'uint64' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registryContract',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'revokedAttestations',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'issuedOn', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'registerAttestationAsIssuer',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'issuer', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'issuedOn', internalType: 'uint64', type: 'uint64' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'registerAttestation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'issuer', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
    ],
    name: 'revokeAttestation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'issuer', internalType: 'address', type: 'address' },
      { name: 'identifiers', internalType: 'bytes32[]', type: 'bytes32[]' },
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'batchRevokeAttestations',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'trustedIssuers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'lookupAttestations',
    outputs: [
      { name: 'countsPerIssuer', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'signers', internalType: 'address[]', type: 'address[]' },
      { name: 'issuedOns', internalType: 'uint64[]', type: 'uint64[]' },
      { name: 'publishedOns', internalType: 'uint64[]', type: 'uint64[]' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'trustedIssuers', internalType: 'address[]', type: 'address[]' },
    ],
    name: 'lookupIdentifiers',
    outputs: [
      { name: 'countsPerIssuer', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'identifiers', internalType: 'bytes32[]', type: 'bytes32[]' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'issuer', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'issuedOn', internalType: 'uint64', type: 'uint64' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'validateAttestationSig',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: 'identifier', internalType: 'bytes32', type: 'bytes32' },
      { name: 'issuer', internalType: 'address', type: 'address' },
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'signer', internalType: 'address', type: 'address' },
      { name: 'issuedOn', internalType: 'uint64', type: 'uint64' },
    ],
    name: 'getUniqueAttestationHash',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Random
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const randomABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'RandomnessBlockRetentionWindowSet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'commitments',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'randomnessBlockRetentionWindow',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_randomnessBlockRetentionWindow', internalType: 'uint256', type: 'uint256' }],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setRandomnessBlockRetentionWindow',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'randomness', internalType: 'bytes32', type: 'bytes32' },
      { name: 'newCommitment', internalType: 'bytes32', type: 'bytes32' },
      { name: 'proposer', internalType: 'address', type: 'address' },
    ],
    name: 'revealAndCommit',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'randomness', internalType: 'bytes32', type: 'bytes32' }],
    name: 'computeCommitment',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'random',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getBlockRandomness',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OdisPayments
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const odisPaymentsABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'valueInCUSD', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'PaymentMade',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registryContract',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'totalPaidCUSD',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'payInCUSD',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Exchange
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const exchangeABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'goldBucket', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'stableBucket', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'BucketsUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'exchanger', internalType: 'address', type: 'address', indexed: true },
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'soldGold', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Exchanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'minimumReports', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MinimumReportsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'reserveFraction', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ReserveFractionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'spread', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SpreadSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'stable', internalType: 'address', type: 'address', indexed: true }],
    name: 'StableTokenSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'updateFrequency', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'UpdateFrequencySet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'goldBucket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastBucketUpdate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minimumReports',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reserveFraction',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'spread',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stable',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stableBucket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stableTokenRegistryId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'updateFrequency',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'stableTokenIdentifier', internalType: 'string', type: 'string' },
      { name: '_spread', internalType: 'uint256', type: 'uint256' },
      { name: '_reserveFraction', internalType: 'uint256', type: 'uint256' },
      { name: '_updateFrequency', internalType: 'uint256', type: 'uint256' },
      { name: '_minimumReports', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'activateStable',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minBuyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'sell',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minBuyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'exchange',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'maxSellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'buyGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'buy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'getBuyTokenAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'getSellTokenAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'sellGold', internalType: 'bool', type: 'bool' }],
    name: 'getBuyAndSellBuckets',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newUpdateFrequency', internalType: 'uint256', type: 'uint256' }],
    name: 'setUpdateFrequency',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newMininumReports', internalType: 'uint256', type: 'uint256' }],
    name: 'setMinimumReports',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newStableToken', internalType: 'address', type: 'address' }],
    name: 'setStableToken',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newSpread', internalType: 'uint256', type: 'uint256' }],
    name: 'setSpread',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newReserveFraction', internalType: 'uint256', type: 'uint256' }],
    name: 'setReserveFraction',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ExchangeEUR
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const exchangeEurABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'goldBucket', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'stableBucket', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'BucketsUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'exchanger', internalType: 'address', type: 'address', indexed: true },
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'soldGold', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Exchanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'minimumReports', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MinimumReportsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'reserveFraction', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ReserveFractionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'spread', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SpreadSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'stable', internalType: 'address', type: 'address', indexed: true }],
    name: 'StableTokenSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'updateFrequency', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'UpdateFrequencySet',
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'activateStable',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'maxSellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'buyGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'buy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minBuyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'exchange',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'sellGold', internalType: 'bool', type: 'bool' }],
    name: 'getBuyAndSellBuckets',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'getBuyTokenAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'getSellTokenAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'goldBucket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'stableTokenIdentifier', internalType: 'string', type: 'string' },
      { name: '_spread', internalType: 'uint256', type: 'uint256' },
      { name: '_reserveFraction', internalType: 'uint256', type: 'uint256' },
      { name: '_updateFrequency', internalType: 'uint256', type: 'uint256' },
      { name: '_minimumReports', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastBucketUpdate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minimumReports',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reserveFraction',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minBuyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'sell',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newMininumReports', internalType: 'uint256', type: 'uint256' }],
    name: 'setMinimumReports',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newReserveFraction', internalType: 'uint256', type: 'uint256' }],
    name: 'setReserveFraction',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newSpread', internalType: 'uint256', type: 'uint256' }],
    name: 'setSpread',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newStableToken', internalType: 'address', type: 'address' }],
    name: 'setStableToken',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newUpdateFrequency', internalType: 'uint256', type: 'uint256' }],
    name: 'setUpdateFrequency',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'spread',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stable',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stableBucket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stableTokenRegistryId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'updateFrequency',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ExchangeBRL
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const exchangeBrlABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'goldBucket', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'stableBucket', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'BucketsUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'exchanger', internalType: 'address', type: 'address', indexed: true },
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'soldGold', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Exchanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'minimumReports', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MinimumReportsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'reserveFraction', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ReserveFractionSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'spread', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SpreadSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'stable', internalType: 'address', type: 'address', indexed: true }],
    name: 'StableTokenSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'updateFrequency', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'UpdateFrequencySet',
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'activateStable',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'maxSellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'buyGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'buy',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minBuyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'exchange',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'sellGold', internalType: 'bool', type: 'bool' }],
    name: 'getBuyAndSellBuckets',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'getBuyTokenAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'getSellTokenAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'goldBucket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'stableTokenIdentifier', internalType: 'string', type: 'string' },
      { name: '_spread', internalType: 'uint256', type: 'uint256' },
      { name: '_reserveFraction', internalType: 'uint256', type: 'uint256' },
      { name: '_updateFrequency', internalType: 'uint256', type: 'uint256' },
      { name: '_minimumReports', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastBucketUpdate',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minimumReports',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reserveFraction',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'minBuyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellGold', internalType: 'bool', type: 'bool' },
    ],
    name: 'sell',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newMininumReports', internalType: 'uint256', type: 'uint256' }],
    name: 'setMinimumReports',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newReserveFraction', internalType: 'uint256', type: 'uint256' }],
    name: 'setReserveFraction',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newSpread', internalType: 'uint256', type: 'uint256' }],
    name: 'setSpread',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newStableToken', internalType: 'address', type: 'address' }],
    name: 'setStableToken',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newUpdateFrequency', internalType: 'uint256', type: 'uint256' }],
    name: 'setUpdateFrequency',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'spread',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stable',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stableBucket',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stableTokenRegistryId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'updateFrequency',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Reserve
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const reserveABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'symbols', internalType: 'bytes32[]', type: 'bytes32[]', indexed: false },
      { name: 'weights', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'AssetAllocationSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'ratio', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'DailySpendingRatioSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'exchangeSpender', internalType: 'address', type: 'address', indexed: true }],
    name: 'ExchangeSpenderAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'exchangeSpender', internalType: 'address', type: 'address', indexed: true }],
    name: 'ExchangeSpenderRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'otherReserveAddress', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OtherReserveAddressAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'otherReserveAddress', internalType: 'address', type: 'address', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'OtherReserveAddressRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ReserveGoldTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'spender', internalType: 'address', type: 'address', indexed: true }],
    name: 'SpenderAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'spender', internalType: 'address', type: 'address', indexed: true }],
    name: 'SpenderRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TobinTaxReserveRatioSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TobinTaxSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'TobinTaxStalenessThresholdSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'token', internalType: 'address', type: 'address', indexed: true }],
    name: 'TokenAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TokenRemoved',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'assetAllocationSymbols',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'assetAllocationWeights',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'exchangeSpenderAddresses',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'frozenReserveGoldDays',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'frozenReserveGoldStartBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'frozenReserveGoldStartDay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isExchangeSpender',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isOtherReserveAddress',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isSpender',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isToken',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'lastSpendingDay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'otherReserveAddresses',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'spendingLimit',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'tobinTax',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'tobinTaxCache',
    outputs: [
      { name: 'numerator', internalType: 'uint128', type: 'uint128' },
      { name: 'timestamp', internalType: 'uint128', type: 'uint128' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'tobinTaxReserveRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'tobinTaxStalenessThreshold',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: '_tobinTaxStalenessThreshold', internalType: 'uint256', type: 'uint256' },
      { name: '_spendingRatio', internalType: 'uint256', type: 'uint256' },
      { name: '_frozenGold', internalType: 'uint256', type: 'uint256' },
      { name: '_frozenDays', internalType: 'uint256', type: 'uint256' },
      { name: '_assetAllocationSymbols', internalType: 'bytes32[]', type: 'bytes32[]' },
      { name: '_assetAllocationWeights', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '_tobinTax', internalType: 'uint256', type: 'uint256' },
      { name: '_tobinTaxReserveRatio', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setTobinTaxStalenessThreshold',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setTobinTax',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'setTobinTaxReserveRatio',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'ratio', internalType: 'uint256', type: 'uint256' }],
    name: 'setDailySpendingRatio',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getDailySpendingRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'frozenGold', internalType: 'uint256', type: 'uint256' },
      { name: 'frozenDays', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setFrozenGold',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'symbols', internalType: 'bytes32[]', type: 'bytes32[]' },
      { name: 'weights', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'setAssetAllocations',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'addToken',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeToken',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'reserveAddress', internalType: 'address', type: 'address' }],
    name: 'addOtherReserveAddress',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'reserveAddress', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOtherReserveAddress',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'spender', internalType: 'address', type: 'address' }],
    name: 'addSpender',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'spender', internalType: 'address', type: 'address' }],
    name: 'removeSpender',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'spender', internalType: 'address', type: 'address' }],
    name: 'addExchangeSpender',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeExchangeSpender',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getExchangeSpenders',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address payable', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferGold',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address payable', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferExchangeGold',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'getOrComputeTobinTax',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getTokens',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOtherReserveAddresses',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAssetAllocationSymbols',
    outputs: [{ name: '', internalType: 'bytes32[]', type: 'bytes32[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getAssetAllocationWeights',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getUnfrozenBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getReserveGoldBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOtherReserveAddressesGoldBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getUnfrozenReserveGoldBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getFrozenReserveGoldBalance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getReserveRatio',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReserveSpenderMultiSig
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const reserveSpenderMultiSigABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Confirmation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Deposit',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'returnData', internalType: 'bytes', type: 'bytes', indexed: false },
    ],
    name: 'Execution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'internalRequired', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InternalRequirementChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerAddition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'owner', internalType: 'address', type: 'address', indexed: true }],
    name: 'OwnerRemoval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'required', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'RequirementChange',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Revocation',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'Submission',
  },
  { payable: true, stateMutability: 'payable', type: 'fallback' },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_OWNER_COUNT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'addOwner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_internalRequired', internalType: 'uint256', type: 'uint256' }],
    name: 'changeInternalRequirement',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_required', internalType: 'uint256', type: 'uint256' }],
    name: 'changeRequirement',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'confirmTransaction',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'confirmations',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'executeTransaction',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'getConfirmationCount',
    outputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'getConfirmations',
    outputs: [{ name: '_confirmations', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getOwners',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'pending', internalType: 'bool', type: 'bool' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
    name: 'getTransactionCount',
    outputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'uint256', type: 'uint256' },
      { name: 'to', internalType: 'uint256', type: 'uint256' },
      { name: 'pending', internalType: 'bool', type: 'bool' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
    name: 'getTransactionIds',
    outputs: [{ name: '_transactionIds', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_owners', internalType: 'address[]', type: 'address[]' },
      { name: '_required', internalType: 'uint256', type: 'uint256' },
      { name: '_internalRequired', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'internalRequired',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'isConfirmed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'owners',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'removeOwner',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'newOwner', internalType: 'address', type: 'address' },
    ],
    name: 'replaceOwner',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'required',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
    name: 'revokeConfirmation',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'submitTransaction',
    outputs: [{ name: 'transactionId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'transactionCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'transactions',
    outputs: [
      { name: 'destination', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
      { name: 'executed', internalType: 'bool', type: 'bool' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// StableToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const stableTokenABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'factor', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'lastUpdated', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InflationFactorUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'rate', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'updatePeriod', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'lastUpdated', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InflationParametersUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'comment', internalType: 'string', type: 'string', indexed: false }],
    name: 'TransferComment',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_name', internalType: 'string', type: 'string' },
      { name: '_symbol', internalType: 'string', type: 'string' },
      { name: '_decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'inflationRate', internalType: 'uint256', type: 'uint256' },
      { name: 'inflationFactorUpdatePeriod', internalType: 'uint256', type: 'uint256' },
      { name: 'initialBalanceAddresses', internalType: 'address[]', type: 'address[]' },
      { name: 'initialBalanceValues', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'exchangeIdentifier', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'rate', internalType: 'uint256', type: 'uint256' },
      { name: 'updatePeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setInflationParameters',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'comment', internalType: 'string', type: 'string' },
    ],
    name: 'transferWithComment',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountOwner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountOwner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getInflationParameters',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'valueToUnits',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getExchangeRegistryId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'units', internalType: 'uint256', type: 'uint256' }],
    name: 'unitsToValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'debitGasFees',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'feeRecipient', internalType: 'address', type: 'address' },
      { name: 'gatewayFeeRecipient', internalType: 'address', type: 'address' },
      { name: 'communityFund', internalType: 'address', type: 'address' },
      { name: 'refund', internalType: 'uint256', type: 'uint256' },
      { name: 'tipTxFee', internalType: 'uint256', type: 'uint256' },
      { name: 'gatewayFee', internalType: 'uint256', type: 'uint256' },
      { name: 'baseTxFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'creditGasFees',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// StableTokenEUR
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const stableTokenEurABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'factor', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'lastUpdated', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InflationFactorUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'rate', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'updatePeriod', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'lastUpdated', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InflationParametersUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'comment', internalType: 'string', type: 'string', indexed: false }],
    name: 'TransferComment',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountOwner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountOwner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'feeRecipient', internalType: 'address', type: 'address' },
      { name: 'gatewayFeeRecipient', internalType: 'address', type: 'address' },
      { name: 'communityFund', internalType: 'address', type: 'address' },
      { name: 'refund', internalType: 'uint256', type: 'uint256' },
      { name: 'tipTxFee', internalType: 'uint256', type: 'uint256' },
      { name: 'gatewayFee', internalType: 'uint256', type: 'uint256' },
      { name: 'baseTxFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'creditGasFees',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'debitGasFees',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getExchangeRegistryId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getInflationParameters',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_name', internalType: 'string', type: 'string' },
      { name: '_symbol', internalType: 'string', type: 'string' },
      { name: '_decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'inflationRate', internalType: 'uint256', type: 'uint256' },
      { name: 'inflationFactorUpdatePeriod', internalType: 'uint256', type: 'uint256' },
      { name: 'initialBalanceAddresses', internalType: 'address[]', type: 'address[]' },
      { name: 'initialBalanceValues', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'exchangeIdentifier', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'rate', internalType: 'uint256', type: 'uint256' },
      { name: 'updatePeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setInflationParameters',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'comment', internalType: 'string', type: 'string' },
    ],
    name: 'transferWithComment',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'units', internalType: 'uint256', type: 'uint256' }],
    name: 'unitsToValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'valueToUnits',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// StableTokenBRL
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const stableTokenBrlABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'factor', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'lastUpdated', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InflationFactorUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'rate', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'updatePeriod', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'lastUpdated', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'InflationParametersUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'comment', internalType: 'string', type: 'string', indexed: false }],
    name: 'TransferComment',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accountOwner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'accountOwner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'burn',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address' },
      { name: 'blsKey', internalType: 'bytes', type: 'bytes' },
      { name: 'blsPop', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'checkProofOfPossession',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'feeRecipient', internalType: 'address', type: 'address' },
      { name: 'gatewayFeeRecipient', internalType: 'address', type: 'address' },
      { name: 'communityFund', internalType: 'address', type: 'address' },
      { name: 'refund', internalType: 'uint256', type: 'uint256' },
      { name: 'tipTxFee', internalType: 'uint256', type: 'uint256' },
      { name: 'gatewayFee', internalType: 'uint256', type: 'uint256' },
      { name: 'baseTxFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'creditGasFees',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'debitGasFees',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'aNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'aDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'bNumerator', internalType: 'uint256', type: 'uint256' },
      { name: 'bDenominator', internalType: 'uint256', type: 'uint256' },
      { name: 'exponent', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'fractionMulExp',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getBlockNumberFromHeader',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochNumber',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getEpochNumberOfBlock',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getEpochSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getExchangeRegistryId',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getInflationParameters',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'getParentSealBitmap',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'getVerifiedSealBitmapFromHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'header', internalType: 'bytes', type: 'bytes' }],
    name: 'hashHeader',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_name', internalType: 'string', type: 'string' },
      { name: '_symbol', internalType: 'string', type: 'string' },
      { name: '_decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'registryAddress', internalType: 'address', type: 'address' },
      { name: 'inflationRate', internalType: 'uint256', type: 'uint256' },
      { name: 'inflationFactorUpdatePeriod', internalType: 'uint256', type: 'uint256' },
      { name: 'initialBalanceAddresses', internalType: 'address[]', type: 'address[]' },
      { name: 'initialBalanceValues', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'exchangeIdentifier', internalType: 'string', type: 'string' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'minQuorumSize',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minQuorumSizeInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'numberValidatorsInCurrentSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockNumber', internalType: 'uint256', type: 'uint256' }],
    name: 'numberValidatorsInSet',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'rate', internalType: 'uint256', type: 'uint256' },
      { name: 'updatePeriod', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setInflationParameters',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'comment', internalType: 'string', type: 'string' },
    ],
    name: 'transferWithComment',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'units', internalType: 'uint256', type: 'uint256' }],
    name: 'unitsToValue',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'validatorSignerAddressFromCurrentSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'index', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'validatorSignerAddressFromSet',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
    name: 'valueToUnits',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SortedOracles
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const sortedOraclesABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'MedianUpdated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'oracleAddress', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OracleAdded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'oracleAddress', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OracleRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'oracle', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OracleReportRemoved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: true },
      { name: 'oracle', internalType: 'address', type: 'address', indexed: true },
      { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'OracleReported',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'reportExpiry', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'ReportExpirySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'reportExpiry', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TokenReportExpirySet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'isOracle',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'oracles',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'reportExpirySeconds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'tokenReportExpirySeconds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_reportExpirySeconds', internalType: 'uint256', type: 'uint256' }],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_reportExpirySeconds', internalType: 'uint256', type: 'uint256' }],
    name: 'setReportExpiry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_reportExpirySeconds', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setTokenReportExpiry',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'oracleAddress', internalType: 'address', type: 'address' },
    ],
    name: 'addOracle',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'oracleAddress', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeOracle',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'n', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'removeExpiredReports',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'isOldestReportExpired',
    outputs: [
      { name: '', internalType: 'bool', type: 'bool' },
      { name: '', internalType: 'address', type: 'address' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'token', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'lesserKey', internalType: 'address', type: 'address' },
      { name: 'greaterKey', internalType: 'address', type: 'address' },
    ],
    name: 'report',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'numRates',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'medianRate',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'getRates',
    outputs: [
      { name: '', internalType: 'address[]', type: 'address[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: '',
        internalType: 'enum SortedLinkedListWithMedian.MedianRelation[]',
        type: 'uint8[]',
      },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'numTimestamps',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'medianTimestamp',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'getTimestamps',
    outputs: [
      { name: '', internalType: 'address[]', type: 'address[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      {
        name: '',
        internalType: 'enum SortedLinkedListWithMedian.MedianRelation[]',
        type: 'uint8[]',
      },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'getOracles',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'token', internalType: 'address', type: 'address' }],
    name: 'getTokenReportExpirySeconds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GrandaMento
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const grandaMentoABI = [
  {
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'test', internalType: 'bool', type: 'bool' }],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'approver', internalType: 'address', type: 'address', indexed: false }],
    name: 'ApproverSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ExchangeProposalApproved',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ExchangeProposalCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'exchanger', internalType: 'address', type: 'address', indexed: true },
      { name: 'stableTokenRegistryId', internalType: 'string', type: 'string', indexed: false },
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sellCelo', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ExchangeProposalCreated',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'ExchangeProposalExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'maxApprovalExchangeRateChange',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'MaxApprovalExchangeRateChangeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address', indexed: true }],
    name: 'RegistrySet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'spread', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SpreadSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'stableTokenRegistryId', internalType: 'string', type: 'string', indexed: false },
      { name: 'minExchangeAmount', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'maxExchangeAmount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'StableTokenExchangeLimitsSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'vetoPeriodSeconds', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'VetoPeriodSecondsSet',
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'activeProposalIdsSuperset',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'approver',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'exchangeProposalCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'exchangeProposals',
    outputs: [
      { name: 'exchanger', internalType: 'address payable', type: 'address' },
      { name: 'stableToken', internalType: 'address', type: 'address' },
      { name: 'state', internalType: 'enum GrandaMento.ExchangeProposalState', type: 'uint8' },
      { name: 'sellCelo', internalType: 'bool', type: 'bool' },
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'buyAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'celoStableTokenExchangeRate', internalType: 'uint256', type: 'uint256' },
      { name: 'vetoPeriodSeconds', internalType: 'uint256', type: 'uint256' },
      { name: 'approvalTimestamp', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'initialized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isOwner',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxApprovalExchangeRateChange',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'registry',
    outputs: [{ name: '', internalType: 'contract IRegistry', type: 'address' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'registryAddress', internalType: 'address', type: 'address' }],
    name: 'setRegistry',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'spread',
    outputs: [{ name: 'value', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'string', type: 'string' }],
    name: 'stableTokenExchangeLimits',
    outputs: [
      { name: 'minExchangeAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'maxExchangeAmount', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'vetoPeriodSeconds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'pure',
    type: 'function',
    inputs: [],
    name: 'getVersionNumber',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_registry', internalType: 'address', type: 'address' },
      { name: '_approver', internalType: 'address', type: 'address' },
      { name: '_maxApprovalExchangeRateChange', internalType: 'uint256', type: 'uint256' },
      { name: '_spread', internalType: 'uint256', type: 'uint256' },
      { name: '_vetoPeriodSeconds', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'stableTokenRegistryId', internalType: 'string', type: 'string' },
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellCelo', internalType: 'bool', type: 'bool' },
    ],
    name: 'createExchangeProposal',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'approveExchangeProposal',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'cancelExchangeProposal',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'proposalId', internalType: 'uint256', type: 'uint256' }],
    name: 'executeExchangeProposal',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'celoStableTokenExchangeRate', internalType: 'uint256', type: 'uint256' },
      { name: 'sellAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'sellCelo', internalType: 'bool', type: 'bool' },
    ],
    name: 'getBuyAmount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'removeFromActiveProposalIdsSuperset',
    outputs: [],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getActiveProposalIds',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    constant: true,
    payable: false,
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'stableTokenRegistryId', internalType: 'string', type: 'string' }],
    name: 'getStableTokenExchangeLimits',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newApprover', internalType: 'address', type: 'address' }],
    name: 'setApprover',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newMaxApprovalExchangeRateChange', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMaxApprovalExchangeRateChange',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newSpread', internalType: 'uint256', type: 'uint256' }],
    name: 'setSpread',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'stableTokenRegistryId', internalType: 'string', type: 'string' },
      { name: 'minExchangeAmount', internalType: 'uint256', type: 'uint256' },
      { name: 'maxExchangeAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setStableTokenExchangeLimits',
    outputs: [],
  },
  {
    constant: false,
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newVetoPeriodSeconds', internalType: 'uint256', type: 'uint256' }],
    name: 'setVetoPeriodSeconds',
    outputs: [],
  },
] as const
